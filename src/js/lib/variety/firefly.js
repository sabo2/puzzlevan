/*! @license pzpr.js v3.5.2-pre (c) 2009-2015 sabo2, MIT license
 *   https://bitbucket.org/sabo2/pzprv3 */
pzpr.classmgr.makeCustom(["firefly"],{MouseEvent:{mouseinput:function(){if(this.owner.playmode)this.btn.Left?this.mousestart||this.mousemove?this.inputLine():this.mouseend&&this.notInputted()&&this.inputpeke():this.btn.Right&&(this.mousestart||this.mousemove)&&this.inputpeke();else if(this.owner.editmode){if(!this.notInputted())return;this.mousestart||this.mousemove?this.inputdirec():this.mouseend&&this.prevPos.getc()===this.getcell()&&this.inputqnum()}}},KeyEvent:{enablemake:!0,moveTarget:function(a){return a.match(/shift/)?!1:this.moveTCell(a)},keyinput:function(a){this.key_inputdirec(a)||this.key_inputqnum(a)}},Cell:{minnum:0},Board:{hasborder:1},BoardExec:{adjustBoardData:function(a,b){this.adjustNumberArrow(a,b)}},LineManager:{isCenterLine:!0},AreaLineManager:{enabled:!0},Flags:{irowake:!0},Graphic:{hideHatena:!0,gridcolor_type:"LIGHT",fontErrcolor:"black",globalfontsizeratio:.85,paint:function(){this.drawBGCells(),this.drawDashedCenterLines(),this.drawLines(),this.drawPekes(),this.drawFireflies1(),this.drawFireflies2(),this.drawNumbers(),this.drawTarget()},drawFireflies1:function(){var a=this.vinc("cell_firefly","auto",!0);a.lineWidth=1.5,a.strokeStyle=this.quescolor;for(var b=.4*this.cw,c=this.range.cells,d=0;d<c.length;d++){var e=c[d];a.vid="c_cira_"+e.id,-1!==e.qnum?(a.fillStyle=1===e.error?this.errbcolor1:"white",a.shapeCircle(e.bx*this.bw,e.by*this.bh,b)):a.vhide()}},drawFireflies2:function(){var a=this.vinc("cell_firefly","auto");a.fillStyle=this.quescolor;for(var b=.4*this.cw,c=.1*this.cw,d=this.range.cells,e=0;e<d.length;e++){var f=d[e];if(a.vid="c_cirb_"+f.id,-1!==f.qnum&&f.qdir!==f.NDIR){var g=f.bx*this.bw,h=f.by*this.bh;switch(f.qdir){case f.UP:h-=b-1;break;case f.DN:h+=b-1;break;case f.LT:g-=b-1;break;case f.RT:g+=b-1}a.fillCircle(g,h,c)}else a.vhide()}},repaintParts:function(a){this.range.cells=a.cellinside(),this.drawFireflies1(),this.drawFireflies2(),this.drawNumbers()}},Encode:{decodePzpr:function(){this.decodeArrowNumber16()},encodePzpr:function(){this.encodeArrowNumber16()}},FileIO:{decodeData:function(){this.decodeCellDirecQnum(),this.decodeBorderLine()},encodeData:function(){this.encodeCellDirecQnum(),this.encodeBorderLine()}},AnsCheck:{checklist:["checkBranchConnectLine","checkCrossConnectLine","checkConnectPoints","checkConnectCircles","checkCurveCount","checkLineShapeDeadend","checkConnectAllNumber","checkDeadendConnectLine+","checkFireflyBeam"],checkFireflyBeam:function(){for(var a=this.owner.board,b=0;b<a.cellmax;b++){var c=a.cell[b],d=c.qdir;if(!c.noNum()&&0!==d&&!c.getaddr().movedir(d,1).getb().isLine()){if(this.failcode.add("nmNoLine"),this.checkOnly)break;c.seterr(1)}}},checkConnectPoints:function(){this.checkLineShape(function(a){var b=a.cells[0],c=a.cells[1];return!c.isnull&&a.dir1===b.qdir&&a.dir2===c.qdir},"lcInvDirB")},checkConnectCircles:function(){this.checkLineShape(function(a){var b=a.cells[0],c=a.cells[1];return!c.isnull&&a.dir1!==b.qdir&&a.dir2!==c.qdir},"lcInvDirW")},checkCurveCount:function(){this.checkLineShape(function(a){var b=a.cells[0],c=a.cells[1],d=(a.dir1===b.qdir?b:c).qnum;return!c.isnull&&d>=0&&d!==a.ccnt},"lcCurveNe")}},FailCode:{nmNoLine:["ホタルから線が出ていません。","There is a lonely firefly."],lcInvDirB:["黒点同士が線で繋がっています。","Points are connected each other."],lcInvDirW:["白丸の、黒点でない部分どうしがくっついています。","Fireflies are connected without a line starting from point."],lcCurveNe:["線の曲がった回数が数字と違っています。","The number of curves is different from a firefly's number."]}});