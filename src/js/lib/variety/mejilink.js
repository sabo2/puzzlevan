/*! @license pzpr.js v3.5.2-pre (c) 2009-2015 sabo2, MIT license
 *   https://bitbucket.org/sabo2/pzprv3 */
pzpr.classmgr.makeCustom(["mejilink"],{MouseEvent:{mouseinput:function(){this.owner.playmode?this.btn.Left?this.mousestart||this.mousemove?this.inputLine():this.mouseend&&this.notInputted()&&(this.prevPos.reset(),this.inputpeke()):this.btn.Right&&(this.mousestart||this.mousemove)&&this.inputpeke():this.owner.editmode&&(this.mousestart||this.mousemove)&&this.inputborder()}},Border:{ques:1,enableLineNG:!0,isGround:function(){return this.ques>0},isLineNG:function(){return 1===this.ques}},BorderList:{allclear:function(a){for(var b=this.owner.board,c=0;c<this.length;c++){var d=this[c],e=d.id<b.bdinside?1:0;d.ques!==e&&(a&&d.addOpe("ques",d.ques,e),d.ques=e)}this.propclear(["line","qsub"],a)}},Board:{qcols:8,qrows:8,hasborder:2,initialize:function(){this.common.initialize.call(this),this.tiles=this.addInfoList(this.owner.AreaTileManager)},initBoardSize:function(a,b){this.common.initBoardSize.call(this,a,b),this.border.allclear(!1)}},LineManager:{borderAsLine:!0},"AreaTileManager:AreaManager":{enabled:!0,relation:["border"],bdfunc:function(a){return!a.isGround()}},Flags:{redline:!0},Graphic:{gridcolor_type:"LIGHT",borderQuescolor:"white",paint:function(){this.drawBGCells(),this.drawDashedGrid(!1),this.drawBorders(),this.drawLines(),this.drawBaseMarks(),this.drawPekes()},getBorderColor:function(a){if(1===a.ques){var b=a.sidecell[1];return b.isnull||0===b.error?this.borderQuescolor:this.errbcolor1}return null},repaintParts:function(a){this.range.crosses=a.crossinside(),this.drawBaseMarks()}},Encode:{decodePzpr:function(){this.decodeMejilink()},encodePzpr:function(){this.encodeMejilink()},decodeMejilink:function(){for(var a=this.outbstr,b=this.owner.board,c=[16,8,4,2,1],d=a?Math.min((b.bdmax+4)/5|0,a.length):0,e=0,f=0;d>f;f++)for(var g=parseInt(a.charAt(f),32),h=0;5>h;h++)e<b.bdmax&&(b.border[e].ques=g&c[h]?1:0,e++);this.outbstr=a.substr(d)},encodeMejilink:function(){for(var a=0,b=this.owner.board,c=b.bdinside;c<b.bdmax;c++)b.border[c].isGround()&&a++;for(var d=0,e=0,f="",g=[16,8,4,2,1],c=0,h=0===a?b.bdinside:b.bdmax;h>c;c++)b.border[c].isGround()&&(e+=g[d]),d++,5===d&&(f+=e.toString(32),d=0,e=0);d>0&&(f+=e.toString(32)),this.outbstr+=f}},FileIO:{decodeData:function(){this.decodeBorder(function(a,b){"2"===b?(a.ques=0,a.line=1):"-1"===b?(a.ques=0,a.qsub=2):a.ques="1"===b?0:1})},encodeData:function(){this.encodeBorder(function(a){return 1===a.line?"2 ":2===a.qsub?"-1 ":0===a.ques?"1 ":"0 "})}},AnsCheck:{checklist:["checkBranchLine","checkCrossLine","checkDotLength","checkDeadendLine","checkOneLoop"],checkDotLength:function(){for(var a=this.owner.board,b=a.tiles.getAreaInfo(),c=[],d=999999,e=1;e<=b.max;e++)c[e]=0;for(var f=0;f<a.bdmax;f++){var g=a.border[f],h=g.sidecell[0],i=g.sidecell[1];g.isGround()&&f>=a.bdinside?(h.isnull||(c[b.getRoomID(h)]-=d),i.isnull||(c[b.getRoomID(i)]-=d)):g.isGround()||g.isLine()||(h.isnull||c[b.getRoomID(h)]++,i.isnull||c[b.getRoomID(i)]++)}for(var e=1;e<=b.max;e++){var j=b.area[e].clist;if(!(c[e]<0||c[e]===j.length)){if(this.failcode.add("bkNoLineNe"),this.checkOnly)break;j.seterr(1)}}}},FailCode:{bkNoLineNe:["タイルと周囲の線が引かれない点線の長さが異なります。","The size of the tile is not equal to the total of length of lines that is remained dotted around the tile."]}});