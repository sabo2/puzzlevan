/*! @license pzpr.js v3.5.2 (c) 2009-2015 sabo2, MIT license
 *   https://bitbucket.org/sabo2/pzprv3 */
pzpr.classmgr.makeCustom(["cbblock"],{MouseEvent:{mouseinput:function(){this.owner.playmode?(this.mousestart||this.mousemove)&&(this.btn.Left&&this.isBorderMode()?this.inputborder():this.inputQsubLine()):this.owner.editmode&&(this.mousestart||this.mousemove)&&this.inputborder()}},Border:{ques:1,enableLineNG:!0,isLineNG:function(){return 1===this.ques},isGround:function(){return this.ques>0}},Board:{qcols:8,qrows:8,hascross:1,hasborder:1,initialize:function(){this.common.initialize.call(this),this.tiles=this.addInfoList(this.owner.AreaTileManager),this.blocks=this.addInfoList(this.owner.AreaBlockManager)},getBlockInfo:function(){for(var a=this.tiles.getAreaInfo(),b=this.blocks.getAreaInfo(),c=1;c<=b.max;c++){var d=[],e=0,f=b.area[c].clist;b.area[c].size=f.length;for(var g=1;g<=a.max;g++)d[g]=0;for(var g=0;g<f.length;g++)d[a.getRoomID(f[g])]++;for(var g=1;g<=a.max;g++)d[g]>0&&e++;b.area[c].dotcnt=e}return b}},"AreaTileManager:AreaManager":{enabled:!0,relation:["border"],bdfunc:function(a){return!a.isGround()}},"AreaBlockManager:AreaManager":{enabled:!0,relation:["border"],bdfunc:function(a){return a.qans>0}},CellList:{getBlockShapes:function(){if(this.shape)return this.shape;for(var a=this.owner.board,b=this.getRectSize(),c=[[],[],[],[],[],[],[],[]],d={cols:b.cols,rows:b.rows,data:[]},e=0;e<2*b.rows;e+=2)for(var f=0;f<2*b.cols;f+=2)c[0].push(this.include(a.getc(b.x1+f,b.y1+e))?1:0),c[1].push(this.include(a.getc(b.x1+f,b.y2-e))?1:0);for(var f=0;f<2*b.cols;f+=2)for(var e=0;e<2*b.rows;e+=2)c[4].push(this.include(a.getc(b.x1+f,b.y1+e))?1:0),c[5].push(this.include(a.getc(b.x1+f,b.y2-e))?1:0);c[2]=c[1].concat().reverse(),c[3]=c[0].concat().reverse(),c[6]=c[5].concat().reverse(),c[7]=c[4].concat().reverse();for(var g=0;8>g;g++)d.data[g]=c[g].join("");return this.shape=d}},Graphic:{gridcolor_type:"LIGHT",borderQuescolor:"white",paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawBorders(),this.drawBorderQsubs(),this.drawBaseMarks(),this.drawChassis(),this.drawPekes()},getBorderColor:function(a){if(1===a.ques){var b=a.sidecell[1];return b.isnull||0===b.error?this.borderQuescolor:this.errbcolor1}return 1===a.qans?this.borderQanscolor:null}},Encode:{decodePzpr:function(){this.decodeCBBlock()},encodePzpr:function(){this.encodeCBBlock()},decodeCBBlock:function(){for(var a=this.outbstr,b=this.owner.board,c=[16,8,4,2,1],d=a?Math.min((b.bdmax+4)/5|0,a.length):0,e=0,f=0;d>f;f++)for(var g=parseInt(a.charAt(f),32),h=0;5>h;h++)e<b.bdmax&&(b.border[e].ques=g&c[h]?1:0,e++);this.outbstr=a.substr(d)},encodeCBBlock:function(){for(var a=0,b=0,c="",d=this.owner.board,e=[16,8,4,2,1],f=0,g=d.bdmax;g>f;f++)d.border[f].isGround()&&(b+=e[a]),a++,5===a&&(c+=b.toString(32),a=0,b=0);a>0&&(c+=b.toString(32)),this.outbstr+=c}},FileIO:{decodeData:function(){this.decodeBorder(function(a,b){"3"===b?(a.ques=0,a.qans=1,a.qsub=1):"1"===b?(a.ques=0,a.qans=1):"-1"===b?(a.ques=1,a.qsub=1):"-2"===b?(a.ques=0,a.qsub=1):a.ques="2"===b?0:1})},encodeData:function(){this.encodeBorder(function(a){return 1===a.qans&&1===a.qsub?"3 ":1===a.qans?"1 ":1===a.ques&&1===a.qsub?"-1 ":0===a.ques&&1===a.qsub?"-2 ":0===a.ques?"2 ":"0 "})}},AnsCheck:{checklist:["checkSingleBlock","checkBlockNotRect","checkDifferentShapeBlock","checkLargeBlock"],getCombiBlockInfo:function(){return this._info.cbinfo=this._info.cbinfo||this.owner.board.getBlockInfo()},checkBlockNotRect:function(){this.checkAllArea(this.getCombiBlockInfo(),function(a,b,c){return a*b!==c},"bkRect")},checkSingleBlock:function(){this.checkMiniBlockCount(1,"bkSubLt2")},checkLargeBlock:function(){this.checkMiniBlockCount(3,"bkSubGt2")},checkMiniBlockCount:function(a,b){for(var c=this.getCombiBlockInfo(),d=1;d<=c.max;d++){var e=c.area[d].dotcnt;if(!(1===a&&e>1||3===a&&2>=e)){if(this.failcode.add(b),this.checkOnly)break;c.area[d].clist.seterr(1)}}},checkDifferentShapeBlock:function(){var a=this.getCombiBlockInfo(),b=a.getSideAreaInfo();a:for(var c=1;c<=a.max-1;c++){var d=a.area[c];if(2===d.dotcnt)for(var e=0;e<b[c].length;e++){var f=b[c][e],g=a.area[f];if(!this.isDifferentShapeBlock(d,g)){if(this.failcode.add("bsSameShape"),this.checkOnly)break a;d.clist.seterr(1),g.clist.seterr(1)}}}},isDifferentShapeBlock:function(a,b){if(2!==a.dotcnt||2!==b.dotcnt||a.size!==b.size)return!0;for(var c=a.clist.getBlockShapes(),d=b.clist.getBlockShapes(),e=c.cols===d.cols&&c.rows===d.rows?0:4,f=c.cols===d.rows&&c.rows===d.cols?8:4,g=e;f>g;g++)if(d.data[0]===c.data[g])return!1;return!0}},FailCode:{bkRect:["ブロックが四角形になっています。","A block is rectangle."],bsSameShape:["同じ形のブロックが接しています。","The blocks that has the same shape are adjacent."],bkSubLt2:["ブロックが1つの点線からなる領域で構成されています。","A block has one area framed by dotted line."],bkSubGt2:["ブロックが3つ以上の点線からなる領域で構成されています。","A block has three or more areas framed by dotted line."]}});