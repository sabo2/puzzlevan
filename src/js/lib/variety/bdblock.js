/*! @license pzpr.js v3.5.2-pre (c) 2009-2015 sabo2, MIT license
 *   https://bitbucket.org/sabo2/pzprv3 */
pzpr.classmgr.makeCustom(["bdblock"],{MouseEvent:{mouseinput:function(){this.owner.playmode?(this.mousestart||this.mousemove)&&(this.btn.Left&&this.isBorderMode()?this.inputborder():this.inputQsubLine()):this.owner.editmode&&(this.mousestart?this.inputcrossMark():this.mouseend&&this.notInputted()&&this.inputqnum())}},KeyEvent:{enablemake:!0},Board:{hasborder:1},AreaRoomManager:{enabled:!0},Graphic:{gridcolor_type:"DLIGHT",bordercolor_func:"qans",borderQanscolor:"black",crosssize:.15,paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawBorders(),this.drawNumbers(),this.drawCrossMarks(),this.drawBorderQsubs(),this.drawChassis(),this.drawTarget()}},Encode:{decodePzpr:function(){this.decodeCrossMark(),this.outbstr=this.outbstr.substr(1),this.decodeNumber16()},encodePzpr:function(){this.encodeCrossMark(),this.outbstr+="/",this.encodeNumber16()}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeCrossNum(),this.decodeBorderAns()},encodeData:function(){this.encodeCellQnum(),this.encodeCrossNum(),this.encodeBorderAns()}},AnsCheck:{checklist:["checkBorderBranchExBP","checkBorderCrossExBP","checkNoNumber","checkSameNumberInBlock","checkGatheredObject","checkBorderDeadend+","checkBorderPassOnBP","checkBorderNoneOnBP"],checkBorderBranchExBP:function(){this.checkBorderCount(3,2,"bdBranchExBP")},checkBorderCrossExBP:function(){this.checkBorderCount(4,2,"bdCrossExBP")},checkBorderPassOnBP:function(){this.checkBorderCount(2,1,"bdCountLt3BP")},checkBorderNoneOnBP:function(){this.checkBorderCount(0,1,"bdIgnoreBP")},checkSameNumberInBlock:function(){this.checkSameObjectInRoom(this.getRoomInfo(),function(a){return a.getNum()},"bkPlNum")},checkGatheredObject:function(){for(var a=[],b=0,c=[],d=this.owner.board,e=this.owner.board.getRoomInfo(),f=0;f<d.cellmax;f++)c[f]=d.cell[f].getNum(),b<c[f]&&(b=c[f]);for(var g=0;b>=g;g++)a[g]=-1;for(var f=0;f<d.cellmax;f++)if(-1!==c[f])if(-1===a[c[f]])a[c[f]]=e.id[f];else if(a[c[f]]!==e.id[f]){this.failcode.add("bkSepNum"),d.cell.filter(function(b){return e.id[f]===e.id[b.id]||a[c[f]]===e.id[b.id]}).seterr(1);break}}},FailCode:{bdBranchExBP:["黒点以外のところで線が分岐しています。","Lines are branched out of the point."],bdCrossExBP:["黒点以外のところで線が交差しています。","Lines are crossed out of the point."],bdCountLt3BP:["黒点から線が３本以上出ていません。","A point has two or less lines."],bdIgnoreBP:["黒点上を線が通過していません。","A point has no line."]}});