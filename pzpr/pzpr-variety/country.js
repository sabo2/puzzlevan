/*! @license pzpr.js v0.3.2 (c) 2009-2016 sabo2, MIT license
 *   https://bitbucket.org/sabo2/pzprv3 */
!function(a,b){"object"==typeof module&&module.exports?module.exports=[a,b]:pzpr.classmgr.makeCustom(a,b)}(["country"],{MouseEvent:{redline:!0,mouseinput:function(){this.puzzle.playmode?this.mousestart||this.mousemove?"left"===this.btn&&this.inputLine():this.mouseend&&this.notInputted()&&this.inputMB():this.puzzle.editmode&&(this.mousestart||this.mousemove?this.inputborder():this.mouseend&&this.notInputted()&&this.inputqnum())}},KeyEvent:{enablemake:!0},Cell:{maxnum:function(){return Math.min(255,this.room.clist.length)}},Board:{hasborder:1},LineGraph:{enabled:!0},AreaRoomGraph:{enabled:!0,hastop:!0},Graphic:{irowake:!0,numbercolor_func:"qnum",gridcolor_type:"SLIGHT",paint:function(){this.drawBGCells(),this.drawNumbers(),this.drawGrid(),this.drawBorders(),this.drawMBs(),this.drawLines(),this.drawChassis(),this.drawTarget()}},Encode:{decodePzpr:function(a){this.decodeBorder(),this.decodeRoomNumber16()},encodePzpr:function(a){this.encodeBorder(),this.encodeRoomNumber16()}},FileIO:{decodeData:function(){this.decodeAreaRoom(),this.decodeCellQnum(),this.decodeBorderLine(),this.decodeCellQsub()},encodeData:function(){this.encodeAreaRoom(),this.encodeCellQnum(),this.encodeBorderLine(),this.encodeCellQsub()}},AnsCheck:{checklist:["checkBranchLine","checkCrossLine","checkRoomPassOnce","checkRoadCount","checkNoRoadCountry","checkSideAreaGrass","checkDeadendLine+","checkOneLoop"],checkRoadCount:function(){this.checkLinesInArea(this.board.roommgr,function(a,b,c,d){return 0>=d||d===c},"bkLineNe")},checkNoRoadCountry:function(){this.checkLinesInArea(this.board.roommgr,function(a,b,c,d){return 0!==c},"bkNoLine")},checkSideAreaGrass:function(){this.checkSideAreaCell(function(a,b){return 0===a.lcnt&&0===b.lcnt},!1,"cbNoLine")},checkRoomPassOnce:function(){for(var a=this.board.roommgr.components,b=0;b<a.length;b++){for(var c=0,d=a[b].clist,e=0;e<d.length;e++){var f,g=d[e],h=g.adjborder;f=h.top,1===f.ques&&1===f.line&&c++,f=h.bottom,1===f.ques&&1===f.line&&c++,f=h.left,1===f.ques&&1===f.line&&c++,f=h.right,1===f.ques&&1===f.line&&c++}if(!(2>=c)){if(this.failcode.add("bkPassTwice"),this.checkOnly)break;d.seterr(1)}}}},FailCode:{bkPassTwice:["線が１つの国を２回以上通っています。","A line passes a country twice or more."],bkNoLine:["線の通っていない国があります。","There is a country that is not passed any line."],bkLineNe:["数字のある国と線が通過するマスの数が違います。","The number of the cells that is passed any line in the country and the number written in the country is diffrerent."],cbNoLine:["線が通らないマスが、太線をはさんでタテヨコにとなりあっています。","The cells that is not passed any line are adjacent over border line."]}});